Product Features
====================

How does database scaling work?
-------------------------------

Heroku can scale your PostgreSQL database vertically. Switching between plans within our shared database tier is instant and seamless. All that changes is the amount of allocated database storage. Switching to/from requires that you place your app into [maintenance mode](/maintenance-mode) and migrate your data from your old to your new database using [pgbackups](/pgbackups).

How does dyno & worker scaling work?
------------------------------------

There are three ways to scale your dynos and workers: with the slider on the resources page for your app, using the heroku command-line client or directly through the API. Either way, changes are almost instant - it only takes a few seconds to deploy your requested number into the [dyno grid](http://heroku.com/how/dyno_grid). Dynos and workers are prorated to the second, so if you want to experiment with different configurations, you can do so and only be billed for actual seconds set. Remember, it's your responsibility to set the correct number of dynos & workers for your app.

What is dyno idling?
--------------------

Apps that have only 1 free dyno will be idled out after a period of inactivity.  When a request comes in to an idled app your dyno will be spun back up, causing a delay for this first request.  Subsequent requests will perform normally.  Apps that have >1 dyno are never idled out.  Workers are never idled out. 

How can I improve my application's performance?
----------------------------------------------

There are a number of ways that you can improve your application's performance:

* Cache whole pages of your application with our our built-in and free [HTTP-accelerator](/http-caching).
* Cache data from long running database queries, complicated page fragments, or other frequently accessed information with the [memcache plugin](/memcache). 
* Architect your application to utilize [delayed job workers](/delayed-job) so that long running tasks are handled in the background.
* Use [New Relic RPM](/newrelic) to identify and optimize slow operations in your application.

Please note that the majority of these technologies require modifying your source code to take advantage of them in addition to installing the relevant add-on or resource.

What Rails versions do you support?
-----------------------------------

We support Rails 1.2.x, 2.x and [3.0.X](/rails3). 

Do you support MySQL?
--------------------

We support MySQL through [Amazon RDS](http://aws.amazon.com/rds). Use the free [Amazon RDS add-on](http://addons.heroku.com/amazon_rds) to easily connect your Heroku apps to your Amazon RDS instances.

Can I point *.mydomain.com to my Heroku app?
--------------------------------------------

Yes, use our [Wildcard Domains add-on](http://addons.heroku.com/custom_domains). Note that this requires the free Custom Domains add-on to also be installed.

Why does IP based SSL cost $100/month?
--------------------------------------

SSL was designed before cloud computing. The original implementation requires that each domain have it’s own dedicated IP address. Amazon EC2 doesn’t have a mechanism to have multiple IP addresses connected to a single instance, meaning that Heroku must spin up a dedicated instance for each domain using SSL.

Do you offer an outgoing email service?
---------------------------------------

Yes, through the [Sendgrid add-on](http://addons.heroku.com/sendgrid). The free version will allow you to send 200 emails per day from your app, and the paid version allows 30,000 emails per month for $20. If you need a higher volume Sendgrid plan, please contact biz@heroku.com. You can also use GMail SMTP, following the instructions at http://bit.ly/21AfKq.

How do I install gems for my app?
---------------------------------

Almost any gem - even those with native dependencies - can be installed using a [gem manifest](http://docs.heroku.com/gems). If there's a specific gem that won't install on Heroku, please [submit a support ticket](http://support.heroku.com/tickets/new).

Does my app have a static IP?
-----------------------------

No. With multiple dynos, your app is distributed across several nodes in our grid. Access and routing to individual dynos is always controlled by our [routing mesh](http://heroku.com/how/architecture#routing-mesh), and goes through our [public IPs](#what-ip-addresses-should-i-use-to-point-my-custom-domain-at-heroku)). While you can never access a dyno directly by IP, it is possible to originate outgoing requests directly from a dyno. However, do not count on the dyno's IP being static. We actively monitor our grid, and frequently move dynos around to ensure optimal reliability and performance.

What IP addresses should I use to point my custom domain at Heroku?
-------------------------------------------------------------------

If you are pointing a root domain (e.g. `example.org`) at Heroku, add these three IP addresses as A records.

    75.101.163.44
    75.101.145.87
    174.129.212.2

If you are pointing a subdomain (e.g. `sub.example.org`) at Heroku, use this hostname as a CNAME record.

    proxy.heroku.com

Can I run services outside of Heroku and have my app connect to them?
---------------------------------------------------------------------

Yes. Heroku runs on Amazon EC2, so any servers you run on EC2 will have the possibility of a low-latency connection from Heroku.

If you'd like to open your EC2 server(s) up only to Heroku, you can use a command like the following:

    ec2-authorize YOURGROUP -P tcp -p 3306 -u 098166147350 -o default

This will open up access to TCP port 3306 in the YOURGROUP security group from Heroku.



 
