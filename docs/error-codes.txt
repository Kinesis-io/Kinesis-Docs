Error Codes
===========

H10 - App crashed
-----------------

A crashed web process or a boot timeout on the web process will present this error.

    2010-10-06T14:30:24-07:00 heroku[web.1]: State changed from down to starting
    2010-10-06T21:51:07-07:00 app[web.1]: >> Using rails adapter
    2010-10-06T21:51:07-07:00 app[web.1]: Missing the Rails 2.3.5 gem. Please `gem install -v=2.3.5 rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.
    2010-10-06T21:51:07-07:00 heroku[web.1]: Process exited with status code 1
    2010-10-06T21:51:07-07:00 heroku[router]: Error H10 (App crashed) -> GET myapp.heroku.com/ web=web.1 queue=0 wait=0ms service=0ms bytes=0
    2010-10-06T21:51:07-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503

H11 - Backlog too deep
----------------------

There are too many HTTP requests in your backlog.  Increasing your dynos is the usual solution.

    2010-10-06T21:51:07-07:00 heroku[router]: Error H11 (Backlog too deep) -> GET myapp.heroku.com/ web=web.1 queue=51 wait=0ms service=0ms bytes=0
    2010-10-06T21:51:07-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503

H12 - Request timeout
---------------------

An HTTP request took longer than 30 seconds to complete.  In the example below, the Rails app takes 37 seconds to render the page; the HTTP router returns a 503 prior to Rails completing its request cycle, but the Rails process continues and the completion message shows after the router message.

    2010-10-06T21:51:07-07:00 app[web.2]: Processing PostController#list (for 75.36.147.245 at 2010-10-06 21:51:07) [GET]
    2010-10-06T21:51:08-07:00 app[web.2]: Rendering template within layouts/application
    2010-10-06T21:51:19-07:00 app[web.2]: Rendering post/list
    2010-10-06T21:51:37-07:00 heroku[router]: Error H12 (Request timeout) -> GET myapp.heroku.com/ web=web.2 queue=0 wait=0ms service=30000ms bytes=0
    2010-10-06T21:51:37-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503
    2010-10-06T21:51:42-07:00 app[web.2]: Completed in 37400ms (View: 27, DB: 21) | 200 OK [http://myapp.heroku.com/]

H13 - Connection closed without response
----------------------------------------

This is an edge case that appears far more rarely than the other errors. There are certain malfunctioning binary gems and other cases where Thin accepts the connection, but then closes the socket without writing anything to it.

    2010-10-06T21:51:37-07:00 heroku[router]: Error H13 (Connection closed without response) -> GET myapp.heroku.com/ web=web.2 queue=0 wait=0ms service=173ms bytes=0
    2010-10-06T21:51:37-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503

H80 - Maintenance mode
----------------------

This is not an error, but we give it a code for the sake of completeness.  Note the log formatting is the same but without the word "Error".

    2010-10-06T21:51:07-07:00 heroku[router]: H80 (Maintenance mode) -> GET myapp.heroku.com/ web=none queue=0 wait=0ms service=0ms bytes=0
    2010-10-06T21:51:07-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503

H99 - Platform error
--------------------

This indicates an internal error in the Heroku platform.  Unlike all of the other errors which will require action from you to correct, this one does not require action from you.  Try again in a minute, or check [the status site](http://status.heroku.com/).

    2010-10-06T21:51:07-07:00 heroku[router]: Error H99 (Platform error) -> GET myapp.heroku.com/ web=none queue=0 wait=0ms service=0ms bytes=0
    2010-10-06T21:51:07-07:00 heroku[nginx]: GET / HTTP/1.1 | 75.36.147.245 | 8132 | http | 503

